# Uncomment this line to define a global platform for your project
platform :ios, '16.0'

# Add this to resolve dependency conflicts
install! 'cocoapods', :deterministic_uuids => false

# Force specific versions to resolve AppCheckCore conflict
def firebase_pods
  pod 'Firebase/Core', '~> 12.0'
  pod 'Firebase/Auth', '~> 12.0'
  pod 'Firebase/Firestore', '~> 12.0'
  pod 'Firebase/Storage', '~> 12.0'
  pod 'Firebase/Messaging', '~> 12.0'
  pod 'Firebase/Analytics', '~> 12.0'
  pod 'Firebase/Functions', '~> 12.0'
  pod 'Firebase/AppCheck', '~> 12.0'
  pod 'Firebase/RemoteConfig', '~> 12.0'
  pod 'AppCheckCore', '~> 12.0'
end

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static

  # Use our custom Firebase pod definitions
  firebase_pods

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # Apply settings to Runner target as well
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # ===== 2025 iOS BUILD RULES COMPLIANCE =====
      
      # 1. Force iOS 16.0+ deployment target for ALL pods
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
      
      # 2. Force Swift 5.0 for ALL pods (eliminates Swift version warnings)
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # 3. Fix Swift optimization levels (eliminates preview warnings)
      if config.name == 'Debug'
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
      else
        # Release and Profile builds use optimized compilation
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'
      end
      
      # 4. Modern iOS build settings for 2025
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['VALID_ARCHS'] = 'arm64'
      config.build_settings['ARCHS'] = 'arm64'
      
      # 5. Additional 2025 compliance settings
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      config.build_settings['SUPPORTED_PLATFORMS'] = 'iphoneos'
      config.build_settings['SUPPORTS_MACCATALYST'] = 'NO'
      
      # 6. Fix specific problematic pods - comprehensive list
      case target.name
      when 'BoringSSL-GRPC', 'BoringSSL-GRPC-openssl_grpc'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'Firebase', 'FirebaseCore', 'FirebaseAuth', 'FirebaseFirestore', 'FirebaseFunctions', 'FirebaseStorage', 'FirebaseMessaging', 'FirebaseRemoteConfig', 'FirebaseInstallations', 'FirebaseAppCheck', 'FirebaseABTesting'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'FirebaseCore-FirebaseCore_Privacy', 'FirebaseAuth-FirebaseAuth_Privacy', 'FirebaseFirestore-FirebaseFirestore_Privacy', 'FirebaseMessaging-FirebaseMessaging_Privacy', 'FirebaseRemoteConfig-FirebaseRemoteConfig_Privacy', 'FirebaseInstallations-FirebaseInstallations_Privacy', 'FirebaseABTesting-FirebaseABTesting_Privacy'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'FirebaseCoreInternal', 'FirebaseCoreInternal-FirebaseCoreInternal_Privacy', 'FirebaseCoreExtension', 'FirebaseCoreExtension-FirebaseCoreExtension_Privacy', 'FirebaseFirestoreInternal', 'FirebaseFirestoreInternal-FirebaseFirestoreInternal_Privacy'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'FirebaseAuthInterop', 'FirebaseMessagingInterop', 'FirebaseRemoteConfigInterop', 'FirebaseAppCheckInterop'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'FirebaseSharedSwift'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'GoogleUtilities', 'GoogleDataTransport', 'GTMSessionFetcher', 'GTMSessionFetcher-GTMSessionFetcher_Core_Privacy', 'GoogleAppMeasurement', 'GoogleAdsOnDeviceConversion', 'FirebaseAnalytics'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'GTMAppAuth', 'GTMAppAuth-GTMAppAuth_Privacy'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'AppAuth', 'AppAuth-AppAuthCore_Privacy', 'AppCheckCore'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'DKPhotoGallery', 'DKPhotoGallery-DKPhotoGallery', 'DKImagePickerController', 'DKImagePickerController-DKImagePickerController'
        # Force these legacy pods to iOS 16.0+ and disable them if possible
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        # Try to suppress deprecated API warnings
        config.build_settings['GCC_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS'] = 'NO'
        config.build_settings['CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS'] = 'NO'
      when 'abseil', 'abseil-xcprivacy'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'Flutter'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      when 'SDWebImage', 'SDWebImage-SDWebImage', 'SwiftyGif', 'SwiftyGif-SwiftyGif'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
      when 'gRPC-Core', 'gRPC-Core-grpc', 'gRPC-C++', 'gRPC-C++-grpcpp', 'gRPC-C++-gRPCCertificates-Cpp'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        config.build_settings['SWIFT_VERSION'] = '5.0'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
      end
      
      # 7. AGGRESSIVE FIX: Force Swift optimization level for ALL pods
      # This ensures no pod is left behind with incorrect optimization settings
      if config.name == 'Debug'
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
      else
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'
      end
      
      # 8. Fix build script phase warnings
      target.build_phases.each do |phase|
        if phase.is_a?(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
          if phase.name == 'Create Symlinks to Header Folders'
            phase.output_paths = ['$(DERIVED_FILE_DIR)/symlinks_created']
          end
        end
      end
    end
  end
  
  # Apply same settings to Runner target
  installer.aggregate_targets.each do |aggregate_target|
    aggregate_target.user_project.targets.each do |target|
      if target.name == 'Runner'
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
          config.build_settings['SWIFT_VERSION'] = '5.0'
          config.build_settings['ENABLE_BITCODE'] = 'NO'
          config.build_settings['VALID_ARCHS'] = 'arm64'
          config.build_settings['ARCHS'] = 'arm64'
          config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
          config.build_settings['SUPPORTED_PLATFORMS'] = 'iphoneos'
          config.build_settings['SUPPORTS_MACCATALYST'] = 'NO'
          
          if config.name == 'Debug'
            config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
          else
            config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'
          end
        end
      end
    end
  end
end
