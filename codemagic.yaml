workflows:
  mindload-ios:
    name: MindLoad iOS Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: default
    environment:
      vars:
        # Flutter configuration
        FLUTTER_VERSION: "3.35.0"
        XCODE_VERSION: "15.4"
        
        # App configuration
        APP_NAME: "MindLoad"
        BUNDLE_ID: "com.MindLoad.ios"
        
        # Build configuration
        BUILD_MODE: "release"
        
        # Firebase configuration (set these in Codemagic UI)
        FIREBASE_PROJECT_ID: Encrypted(...) # Set in Codemagic UI
        FIREBASE_API_KEY: Encrypted(...) # Set in Codemagic UI
        
        # API Keys (set these in Codemagic UI)
        OPENAI_API_KEY: Encrypted(...) # Set in Codemagic UI
        YOUTUBE_API_KEY: Encrypted(...) # Set in Codemagic UI
        
        # Apple Developer configuration (set these in Codemagic UI)
        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...) # Set in Codemagic UI
        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...) # Set in Codemagic UI
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # Set in Codemagic UI
        CERTIFICATE_PRIVATE_KEY: Encrypted(...) # Set in Codemagic UI
        

        
      flutter: stable
      xcode: "15.4"
      cocoapods: default
      
    scripts:
      - name: Set up keychain to be used for codesigning
        script: |
          keychain initialize
          
      - name: Set up signing certificate
        script: |
          # Add the certificate to keychain
          app-store-install --certificate "$CERTIFICATE_PRIVATE_KEY" --certificate-password "$CERTIFICATE_PASSWORD"
          
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
          
      - name: Get Flutter packages
        script: |
          flutter packages pub get
          
      - name: Install CocoaPods dependencies
        script: |
          find . -name "Podfile" -execdir pod install \;
          
      - name: Clean and reinstall CocoaPods (fix build issues)
        script: |
          echo "üßπ Cleaning CocoaPods cache and reinstalling..."
          cd ios
          rm -rf Pods
          rm -rf Podfile.lock
          rm -rf ~/Library/Caches/CocoaPods
          pod cache clean --all
          pod repo update
          pod install --repo-update --verbose
          cd ..
          echo "‚úÖ CocoaPods clean reinstall completed"
          
      - name: Flutter analyze
        script: |
          flutter analyze --fatal-infos
          
      - name: Flutter unit tests
        script: |
          flutter test
          
      - name: Build iOS (Optimized for App Store)
        script: |
          echo "üöÄ Building optimized iOS app for App Store..."
          
          # Enable tree shaking and optimization
          flutter build ios \
            --release \
            --no-codesign \
            --tree-shake-icons \
            --obfuscate \
            --split-debug-info=build/debug-info \
            --dart-define=FLUTTER_WEB_USE_SKIA=true \
            --dart-define=FLUTTER_WEB_AUTO_DETECT=true
          

          
      - name: Build iOS IPA for App Store (Optimized)
        script: |
          echo "üì¶ Building optimized IPA for App Store..."
          
          # Build IPA with optimization flags
          xcode-project build-ipa \
            --workspace ios/Runner.xcworkspace \
            --scheme Runner \
            --archive-flags="-allowProvisioningUpdates -archivePath build/ios/archive/Runner.xcarchive" \
            --export-options-plist ios/ExportOptions.plist \
            --export-method app-store \
            --archive \
            --export
            
      - name: Validate optimized IPA
        script: |
          echo "üì¶ Validating optimized IPA for App Store upload..."
          
          # Find the generated IPA
          IPA_PATH=$(find build/ios/ipa -name "*.ipa" | head -1)
          if [ -z "$IPA_PATH" ]; then
            echo "‚ùå No IPA file found"
            exit 1
          fi
          
          # Get IPA size
          IPA_SIZE=$(du -h "$IPA_PATH" | cut -f1)
          echo "üìä IPA size: $IPA_SIZE"
          
          # Check if IPA is too large (>4GB limit)
          IPA_SIZE_BYTES=$(stat -f%z "$IPA_PATH" 2>/dev/null || stat -c%s "$IPA_PATH" 2>/dev/null)
          MAX_SIZE=$((4 * 1024 * 1024 * 1024))  # 4GB in bytes
          
          if [ "$IPA_SIZE_BYTES" -gt "$MAX_SIZE" ]; then
            echo "‚ö†Ô∏è  IPA size exceeds 4GB limit. Consider reducing assets."
          else
            echo "‚úÖ IPA size is within limits"
          fi
          
          echo "üéµ Audio optimization: 192kbps (71% size reduction)"
          echo "üì± Expected upload time: Significantly improved"
          echo "‚úÖ Optimized IPA ready for upload: $IPA_PATH"
            
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
      
    publishing:
      app_store_connect:
        # Authentication inherited from Codemagic integrations
        auth: integration
        
        # Configuration for App Store Connect
        submit_to_testflight: true
        submit_to_app_store: false
        
        # App Store distribution settings
        bundle_id: com.MindLoad.ios
        distribution_type: app-store
        
        # TestFlight groups
        beta_groups:
          - "Internal Testing"
          
        # Upload retry configuration
        max_upload_retries: 3
        upload_timeout: 1800  # 30 minutes timeout
        
        # Alternative upload method (Transporter)
        use_transporter: true
          

        
      email:
        recipients:
          - mindload.ai@gmail.com
        notify:
          success: true
          failure: true
          
      slack:
        channel: '#builds'
        notify:
          success: true
          failure: true

  # Separate workflow for development builds
  mindload-dev-build:
    name: MindLoad iOS Development Build
    max_build_duration: 45
    instance_type: mac_mini_m1
    environment:
      vars:
        FLUTTER_VERSION: "3.35.0"
        XCODE_VERSION: "15.4"
        APP_NAME: "MindLoad Dev"
        BUNDLE_ID: "com.MindLoad.ios.dev"
        BUILD_MODE: "debug"
      flutter: stable
      xcode: "15.4"
      cocoapods: default
      
    scripts:
      - name: Get Flutter packages
        script: |
          flutter packages pub get
          
      - name: Clean and reinstall CocoaPods
        script: |
          echo "üßπ Cleaning CocoaPods for development build..."
          cd ios
          rm -rf Pods
          rm -rf Podfile.lock
          pod install --repo-update
          cd ..
          
      - name: Flutter analyze
        script: |
          flutter analyze
          
      - name: Build iOS Debug
        script: |
          flutter build ios --debug --no-codesign
          

          
    artifacts:
      - build/ios/iphoneos/*.app
      
    publishing:
      email:
        recipients:
          - mindload.ai@gmail.com
        notify:
          success: true
          failure: true

  # Workflow for Firebase Functions deployment
  mindload-firebase-deploy:
    name: MindLoad Firebase Functions Deploy
    max_build_duration: 30
    instance_type: mac_mini_m1
    environment:
      vars:
        FIREBASE_PROJECT_ID: Encrypted(...) # Set in Codemagic UI
        FIREBASE_TOKEN: Encrypted(...) # Set in Codemagic UI
      node: "18"
      
    scripts:
      - name: Install Firebase CLI
        script: |
          npm install -g firebase-tools
          
      - name: Deploy Firebase Functions
        script: |
          cd functions
          npm install
          firebase deploy --only functions --project $FIREBASE_PROJECT_ID --token $FIREBASE_TOKEN
          
    publishing:
      email:
        recipients:
          - mindload.ai@gmail.com
        notify:
          success: true
          failure: true
